name: CI-CD Api capstone project

on:
  push:
    branches:
      - "development"

env:
  GITHUB_SHA: sha-${{ github.sha }}

jobs:
  build-app:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17

      - name: Install dependencies
        run: go mod download

      - name: Verify module
        run: go mod verify

      # - name: Go testing
      #   run: |
      #     cd business
      #     go test -v ./...

      - name: Build go App
        run: go build -v ./...

      # - name: Check go vet linting
      #   run: go vet ./...

  build-docker-push:
    runs-on: ubuntu-latest
    needs: build-app
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            academytokyo/capstone
          tags: |
            type=sha,format=long
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push into docker registry
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: print meta tags
        run: |
          echo "${{ env.GITHUB_SHA }}"

  ssh-ec2:
    runs-on: ubuntu-latest
    needs: build-docker-push
    steps:
      - uses: actions/checkout@v2
      - name: Setup ENV for ssh into EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USER_NAME  }}
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > ~/.ssh/capstone
          chmod 600 ~/.ssh/capstone
          cat >> ~/.ssh/config << END
          Host development
            HostName ${{ secrets.HOSTNAME }}
            User ${{ secrets.USER_NAME }}
            IdentityFile ~/.ssh/capstone
            StrictHostKeyChecking no
          END
      - name: ssh into EC2
        run: ssh development 'docker rm -f $(docker ps -a -q) && docker rmi $(docker images -q) && docker pull academytokyo/capstone:${{ env.GITHUB_SHA }} && docker run -d -p 80:80 --name capstone academytokyo/capstone:${{ env.GITHUB_SHA }}'
